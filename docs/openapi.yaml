openapi: 3.0.0
info:
  title: Express Supabase API
  description: API documentation for the Express application using Supabase as the database.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /auth/register:
    post:
      summary: User Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
              required:
                - email
                - password
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
        '409':
          description: User already exists

  /auth/login:
    post:
      summary: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /admin:
    get:
      summary: Admin Dashboard
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Admin data retrieved successfully
        '403':
          description: Forbidden

  /mobile/data:
    get:
      summary: Mobile App Data
      responses:
        '200':
          description: Mobile data retrieved successfully

  /files/upload:
    post:
      summary: Upload File
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: File uploaded successfully
        '400':
          description: Invalid file

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer